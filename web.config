<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <system.webServer>
    <!-- Tell IIS to use Node.js to handle all requests -->
    <handlers>
              <add name="iisnode" path="server/app.cjs" verb="*" modules="iisnode"/>
    </handlers>
    
    <!-- URL Rewrite rules for SPA routing and API -->
    <rewrite>
      <rules>
        <!-- API routes should go to the server -->
        <rule name="API" stopProcessing="true">
          <match url="^api/.*" />
          <action type="Rewrite" url="server/app.js"/>
        </rule>
        
        <!-- Health check route -->
        <rule name="Health" stopProcessing="true">
          <match url="^health$" />
          <action type="Rewrite" url="server/app.js"/>
        </rule>
        
        <!-- Static files -->
        <rule name="StaticFiles" stopProcessing="true">
          <match url="^(assets|images|css|js|fonts)/.*" />
          <action type="None" />
        </rule>
        
        <!-- Everything else goes to React app -->
        <rule name="ReactRouter" stopProcessing="true">
          <match url=".*" />
          <conditions logicalGrouping="MatchAll">
            <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="true" />
            <add input="{REQUEST_FILENAME}" matchType="IsDirectory" negate="true" />
          </conditions>
          <action type="Rewrite" url="dist/index.html"/>
        </rule>
      </rules>
    </rewrite>
    
    <!-- Configure iisnode -->
    <iisnode 
      node_env="production"
      nodeProcessCountPerApplication="1"
      maxConcurrentRequestsPerProcess="1024"
      maxNamedPipeConnectionRetry="3"
      namedPipeConnectionRetryDelay="2000"
      maxNamedPipeConnectionPoolSize="512"
      maxNamedPipePooledConnectionAge="30000"
      asyncCompletionThreadCount="0"
      initialRequestBufferSize="4096"
      maxRequestBufferSize="65536"
      watchedFiles="*.js"
      uncFileChangesPollingInterval="5000"
      gracefulShutdownTimeout="60000"
      loggingEnabled="true"
      logDirectoryNameSuffix="logs"
      debuggingEnabled="false"
      devErrorsEnabled="false"
    />
    
    <!-- Security headers -->
    <httpProtocol>
      <customHeaders>
        <add name="X-Content-Type-Options" value="nosniff" />
        <add name="X-Frame-Options" value="DENY" />
        <add name="X-XSS-Protection" value="1; mode=block" />
      </customHeaders>
    </httpProtocol>
    
    <!-- Error handling -->
    <httpErrors errorMode="Detailed" />
  </system.webServer>
</configuration> 